################################################################################
# General configuration
# Define el puerto en el que la aplicaci\u00f3n se ejecutar\u00e1. Railway asigna el puerto din\u00e1micamente
# a trav\u00e9s de la variable de entorno PORT. Si no se define PORT, usar\u00e1 el puerto 8080.
server.port=${PORT:8080}

# DB access Development Dllo aiven
# URL de conexi\u00f3n a la base de datos MySQL alojada en Aiven. Incluye la direcci\u00f3n del servidor,
# puerto y nombre de la base de datos.
spring.datasource.url=jdbc:mysql://portalserviciostecnicos-portalserviciostecnicos.g.aivencloud.com:20796/portal_servicios_tecnicos

# Nombre de usuario para conectarse a la base de datos MySQL.
spring.datasource.username=avnadmin

# Contrase\u00f1a para el usuario de la base de datos.
spring.datasource.password=AVNS_nJXMtMYS6GQw2Vj2eHg

# Clase del driver JDBC necesario para conectarse a la base de datos MySQL.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Configuraci\u00f3n para que Hibernate cree o actualice autom\u00e1ticamente las tablas en la base de datos
# seg\u00fan las entidades definidas en el c\u00f3digo de la aplicaci\u00f3n.
spring.jpa.hibernate.ddl-auto=update

# Dialecto espec\u00edfico de Hibernate para MySQL, que le indica c\u00f3mo generar el SQL espec\u00edfico
# para esta base de datos.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Indica que la inicializaci\u00f3n de la base de datos debe realizarse siempre al arrancar la aplicaci\u00f3n.
# Esto se usa para cargar datos iniciales.
spring.datasource.initialization-mode=always

# Ubicaci\u00f3n del archivo SQL con los datos iniciales que se deben cargar en la base de datos
# cuando se inicia la aplicaci\u00f3n.
spring.datasource.data=data.sql

logging.level.org.springframework.security=DEBUG

#activa el modo prodccuion para vaadin
vaadin.productionMode=true